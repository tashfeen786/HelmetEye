// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Suggests alternative actions for unhelmeted drivers.
 *
 * - suggestAlternativeAction - A function that suggests alternative actions for unhelmeted drivers.
 * - SuggestAlternativeActionInput - The input type for the suggestAlternativeAction function.
 * - SuggestAlternativeActionOutput - The return type for the suggestAlternativeAction function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestAlternativeActionInputSchema = z.object({
  unhelmetedCount: z
    .number()
    .describe('The number of unhelmeted drivers observed.'),
  totalCount: z.number().describe('The total number of drivers observed.'),
});
export type SuggestAlternativeActionInput = z.infer<
  typeof SuggestAlternativeActionInputSchema
>;

const SuggestAlternativeActionOutputSchema = z.object({
  suggestion: z
    .string()
    .describe('A suggestion for alternative actions to take.'),
});
export type SuggestAlternativeActionOutput = z.infer<
  typeof SuggestAlternativeActionOutputSchema
>;

export async function suggestAlternativeAction(
  input: SuggestAlternativeActionInput
): Promise<SuggestAlternativeActionOutput> {
  return suggestAlternativeActionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestAlternativeActionPrompt',
  input: {schema: SuggestAlternativeActionInputSchema},
  output: {schema: SuggestAlternativeActionOutputSchema},
  prompt: `You are an AI assistant helping to improve road safety.

You are provided with the number of unhelmeted drivers observed and the total number of drivers observed.

Suggest an alternative action that can be taken to improve helmet usage.

Unhelmeted Count: {{{unhelmetedCount}}}
Total Count: {{{totalCount}}}

Suggestion:`,
});

const suggestAlternativeActionFlow = ai.defineFlow(
  {
    name: 'suggestAlternativeActionFlow',
    inputSchema: SuggestAlternativeActionInputSchema,
    outputSchema: SuggestAlternativeActionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
